// <auto-generated />
using System;
using Blog.Repositorio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240129234719_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Blog.Dominio.Categorias.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATACRIACAO");

                    b.Property<DateTime>("DataUltimaAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATAULTIMAALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("Blog.Dominio.Noticias.Noticia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("IDNOTICIA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ATIVO");

                    b.Property<Guid>("CodigoAutor")
                        .HasColumnType("char(36)")
                        .HasColumnName("IDAUTOR");

                    b.Property<Guid>("CodigoCategoria")
                        .HasColumnType("char(36)")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CONTEUDO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATACRIACAO");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("IMAGEM");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int")
                        .HasColumnName("PRIORIDADE");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAutor");

                    b.HasIndex("CodigoCategoria");

                    b.ToTable("NOTICIA", (string)null);
                });

            modelBuilder.Entity("Blog.Dominio.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("IDUSUARIO");

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ADMIN");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("FOTOPERFIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SENHA");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SOBRENOME");

                    b.HasKey("Id");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("Blog.Dominio.Noticias.Noticia", b =>
                {
                    b.HasOne("Blog.Dominio.Usuarios.Usuario", "Autor")
                        .WithMany()
                        .HasForeignKey("CodigoAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Dominio.Categorias.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
